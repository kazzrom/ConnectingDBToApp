 <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:gc="clr-namespace:ConnectingDBToApp.GlobalClasses">
     
    <!--Global Styles-->

     
     <!--Style TextBlock-->
    
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Mulish}"/>
    </Style>
    
    <!--End: Style TextBlock-->


    <!--Style TabControl-->

    <Style TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MouseOverColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20 12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="5"
                            Margin="0 0 5 0">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MouseOverColor}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundDarkGray}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TitleWindowColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <WrapPanel Grid.Row="0"
                                   IsItemsHost="True"
                                   Margin="0 0 0 20"/>
                        <Border Grid.Row="1">
                            <ContentPresenter ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End: Style TabControl-->
    
    
    <!--Style ScrollViewer-->
    
    <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource MouseOverColor}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Width="10"
                            Margin="3 5"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundDarkGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                        </Track.Thumb>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--End: Style ScrollViewer-->
    
    
    <!--End: Global Styles-->
    
    
    <!--Header window-->
    
    <Style x:Key="TitleWindow" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Mulish}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleWindowColor}"/>
        <Setter Property="Text" Value="Технология подключения базы данных к настольному приложению"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>

    <Style x:Key="MenuButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="BackgroundElement">
                        <Rectangle x:Name="Icon" 
                                   Width="22.5" Height="15"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource MenuCloseIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" 
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource MenuIcon}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" 
                                    Property="Fill" Value="Black"/> 
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimizeButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement"
                            Background="Transparent"
                            Padding="0 20 0 0">
                        <Rectangle x:Name="Icon" 
                                   Width="15" Height="5"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" 
                                             Visual="{StaticResource MinimizeIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FullscreenButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement">
                        <Rectangle x:Name="Icon" 
                                   Width="22.5" Height="22.5"
                                   Fill="{DynamicResource TitleWindowColor}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource FullScreenIcon}"/>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="Normal">
                            <Setter TargetName="Icon" 
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource FullScreenIcon}"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="Maximized">
                            <Setter TargetName="Icon"
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource FullScreenExitIcon}"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement">
                        <Rectangle x:Name="Icon" 
                                   Width="17.5" Height="17.5"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource CloseIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource CloseHoverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End: Header window-->
    
    
    <!--Style sidebar-->

    <Style x:Key="SideBarItem" TargetType="ListBoxItem">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="BackgroundElement"
                            CornerRadius="5"
                            Padding="15 15 0 15"
                            Margin="0 0 0 10"
                            Background="Transparent">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="Icon"
                                    Width="25" Height="25"
                                    Margin="0 0 10 0">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding PathImage}"/>
                                </Border.Background>
                            </Border>
                            <TextBlock Text="{Binding Title}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement" 
                                    Property="Background" Value="{DynamicResource MouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BackgroundElement" 
                                    Property="Background" Value="{DynamicResource ActiveStateColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideBarApp" TargetType="ListBox">
        <Setter Property="Width" Value="230"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
        <Setter Property="Padding" Value="10 30 10 0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource SideBarItem}"/>
    </Style>

    <!--End: Style sidebar-->
        
    
    <!--Styles for ListBoxItem-->

    <Style x:Key="H1" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Mulish}"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 10 0 30"/>
    </Style>

    <Style x:Key="H2" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Mulish}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0 15 0 15"/>
    </Style>

    <Style x:Key="PlainText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Mulish}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="H1Item" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock x:Name="TextBlockContent"
                               Text="{Binding Text}"
                               Style="{StaticResource H1}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="H2Item" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock x:Name="TextBlockContent"
                               Text="{Binding Text}"
                               Style="{StaticResource H2}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlainTextItem" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <TextBlock x:Name="TextBlockContent"
                                   Text="{Binding Text}"
                                   Style="{StaticResource PlainText}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageItem" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Source="{Binding Text}"
                           Margin="0 5"
                           MaxWidth="600"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DoubleImageItem" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <UniformGrid Columns="2"
                                 Margin="0 5">
                        <Image Source="{Binding Text}"
                               Margin="0 0 5 0"/>
                        <Image Source="{Binding AdditionalText}"/>
                    </UniformGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CopyButton" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement"
                            Background="Transparent"
                            CornerRadius="5">
                        <Rectangle x:Name="Icon" 
                                   Width="22.5" Height="22.5"
                                   Fill="Black">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource ContentCopyIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource MouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundDarkGray}"
                                    TargetName="BackgroundElement"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CopyButtonCodeImage" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement"
                        Background="Transparent"
                        CornerRadius="5">
                        <Rectangle x:Name="Icon" 
                               Width="22.5" Height="22.5"
                               Fill="White">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource ContentCopyIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="White"/>
                            <Setter TargetName="Icon"
                                    Property="Fill" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="Black"/>
                            <Setter TargetName="Icon"
                                    Property="Fill" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CopyButtonItem" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"
                                Style="{StaticResource CopyButton}"
                                Content="Скопировать" 
                                Command="{Binding DataContext.CopyText, RelativeSource={RelativeSource AncestorType=Page}}"
                                CommandParameter="{Binding Code}"
                                Margin="10 0 5 0"/>
                        <TextBlock Grid.Column="1"
                                   Style="{StaticResource PlainText}"
                                   Text="{Binding Text}"
                                   VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CodeImageItem" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="0 5"
                            MaxWidth="600">
                        <Grid>
                            <Image Source="{Binding Text}"/>
                            <Button Content="Скопировать код"
                                    Command="{Binding DataContext.CopyText, RelativeSource={RelativeSource AncestorType=Page}}"
                                    CommandParameter="{Binding Code}"
                                    Style="{StaticResource CopyButtonCodeImage}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Right"
                                    Margin="0 30 30 0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End: Styles for ListBoxItem-->
    
     
     <!--Style DataListBox-->

    <Style x:Key="DataListBox" TargetType="ListBox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="30 0"/>
        <Setter Property="MaxWidth" Value="800"/>
        <Setter Property="ItemContainerStyleSelector">
            <Setter.Value>
                <gc:CustomStyleSelector
                        H1Item="{StaticResource H1Item}" 
                        H2Item="{StaticResource H2Item}"
                        ImageItem="{StaticResource ImageItem}"
                        DoubleImageItem="{StaticResource DoubleImageItem}"
                        PlainTextItem="{StaticResource PlainTextItem}"
                        CopyButtonItem="{StaticResource CopyButtonItem}"
                        CodeImageItem="{StaticResource CodeImageItem}"/>
            </Setter.Value>
        </Setter>
    </Style>
     
     <!--End: Style DataListBox-->
     
     
     <!--Style for test-->

    <Style x:Key="TestButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BackgroundDarkGray}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Padding" Value="30 15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TestButtonHoverColor}"
                                    TargetName="BackgroundElement"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource TestButtonPressColor}"
                                    TargetName="BackgroundElement"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomRadioButton" TargetType="RadioButton">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0 0 0 20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Ellipse x:Name="Border"
                                         Width="20" Height="20"
                                         Fill="{StaticResource BackgroundDarkGray}"/>
                                <Ellipse x:Name="CheckMark"
                                         Width="14" Height="14"
                                         StrokeThickness="2"
                                         Stroke="White"
                                         Fill="White"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="15 0 0 0"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" Value="Transparent"
                                    TargetName="CheckMark"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
     
     <!--End: Style for test-->
     
</ResourceDictionary>