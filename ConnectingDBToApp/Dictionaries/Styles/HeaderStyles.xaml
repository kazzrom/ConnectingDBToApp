<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TitleWindow" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource Mulish}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleWindowColor}"/>
        <Setter Property="Text" Value="Технология подключения базы данных к настольному приложению"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
    </Style>

    <Style x:Key="MenuButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="ToolTip" Value="Скрыть меню"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="BackgroundElement">
                        <Rectangle x:Name="Icon" 
                                   Width="22.5" Height="15"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource MenuCloseIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" 
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource MenuIcon}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="Показать меню"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon"
                                    Property="Fill" Value="{DynamicResource BackgroundHeaderColor}"/>
                            <Setter TargetName="Icon" 
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource MenuIcon}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimizeButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement"
                            Background="Transparent"
                            Padding="0 20 0 0">
                        <Rectangle x:Name="Icon" 
                                   Width="15" Height="5"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" 
                                             Visual="{StaticResource MinimizeIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FullscreenButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement">
                        <Rectangle x:Name="Icon" 
                                   Width="22.5" Height="22.5"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource FullScreenIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource BackgroundMenuColor}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="Normal">
                            <Setter TargetName="Icon" 
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource FullScreenIcon}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="Развернуть"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="Maximized">
                            <Setter TargetName="Icon"
                                    Property="OpacityMask">
                                <Setter.Value>
                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource FullScreenExitIcon}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="Свернуть в окно"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BackgroundElement">
                        <Rectangle x:Name="Icon" 
                                   Width="17.5" Height="17.5"
                                   Fill="{DynamicResource TitleWindowColor}">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource CloseIcon}"/>
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement"
                                    Property="Background" Value="{DynamicResource CloseHoverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>